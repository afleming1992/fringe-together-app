generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  uid                     String                @id
  firstName                String
  lastName                String
  profilePic              String?
  groups                  GroupMembership[]
  interestedShow          GroupShowInterest[]
}

model GroupMembership {
  groupId    Int
  group      Group    @relation(fields: [groupId], references: [id], onDelete: Cascade)
  userUid    String
  user       User     @relation(fields: [userUid], references: [uid], onDelete: Cascade)
  admin      Boolean
  createdAt  DateTime @default(now())

  @@id([groupId, userUid])
}

model Group {
  id                Int                    @id @default(autoincrement())
  name              String
  members           GroupMembership[]
  createdAt         DateTime               @default(now())
  updatedAt         DateTime               @updatedAt
  shows             GroupShow[]            
}

model ShowInfo {
  uri               String                  @id
  title             String
  location          String
  groupsInterested  GroupShow[]
}

model GroupShow {
  id                Int                     @id @default(autoincrement())
  groupId         Int             
  group             Group                   @relation(fields: [groupId], references: [id], onDelete: Cascade)
  showUri          String
  show              ShowInfo                @relation(fields: [showUri], references: [uri], onDelete: Cascade)
  interest          GroupShowInterest[]
}

model GroupShowInterest {
  id                Int                     @id @default(autoincrement())
  groupShowId       Int             
  groupShow         GroupShow               @relation(fields: [groupShowId], references: [id])
  type              GroupShowInterestType
  date              DateTime?                
  user              User                    @relation(fields: [userUid], references: [uid], onDelete: Cascade)
  userUid           String
  createdAt         DateTime                @default(now())
  updatedAt         DateTime                @updatedAt
}

enum GroupShowInterestType {
  INTERESTED
  INTERESTED_IN_DATE
  BOOKED
}

