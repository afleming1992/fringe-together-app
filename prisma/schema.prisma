generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  uid                     String                @id
  first_name              String
  last_name               String
  profile_pic             String?
  groups                  GroupMembership[]
  interested_show         GroupShowInterest[]
}

model GroupMembership {
  group_id   Int
  group      Group    @relation(fields: [group_id], references: [id], onDelete: Cascade)
  user_uid   String
  user       User     @relation(fields: [user_uid], references: [uid], onDelete: Cascade)
  admin      Boolean
  created_at DateTime @default(now())

  @@id([group_id, user_uid])
}

model Group {
  id                Int                    @id @default(autoincrement())
  name              String
  members           GroupMembership[]
  created_at        DateTime               @default(now())
  updated_at        DateTime               @updatedAt
  interested_events GroupShowInterest[]
}

model GroupShowInterest {
  id                Int                     @id @default(autoincrement())
  type              GroupShowInterestType
  showUri           String
  date              DateTime?                
  user              User                    @relation(fields: [user_uid], references: [uid], onDelete: Cascade)
  user_uid          String
  group             Group                   @relation(fields: [group_id], references: [id], onDelete: Cascade)
  group_id          Int
  created_at        DateTime                @default(now())
  updated_at        DateTime                @updatedAt
}

enum GroupShowInterestType {
  INTERESTED
  INTERESTED_IN_DATE
  BOOKED
}

